---
on:
  pull_request:
    branches:
      - main

env:
  QA_STACK_NAME: budget-tracker-api-qa
  PROD_STACK_NAME: budget-tracker-api-prod

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: aws-actions/setup-sam@v1
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - run: pip install -r requirements.txt
      - run: echo $PYTHONPATH
      - run: python -m tests.unit.unit_tests
      - run: sam build --template sam_template.yaml --use-container
      - run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --stack-name ${{ env.QA_STACK_NAME }} --image-repository 621544995223.dkr.ecr.us-west-2.amazonaws.com/budget-tracker-ecr-backend --capabilities CAPABILITY_IAM --region us-west-2
      - id: get_qa_endpoint
        run: |
          stack_description="$(aws cloudformation describe-stacks --stack-name ${{ env.QA_STACK_NAME }})"
          printf "stack_description: $stack_description \n"
          qa_endpoint=$(echo $stack_description | jq .Stacks[0].Outputs[1].OutputValue)
          printf "qa_endpoint: $qa_endpoint \n"
          echo "qa_endpoint=$qa_endpoint" >> $GITHUB_ENV
      - id: acceptance_tests
        run: PYTHONPATH=. pytest tests/acceptance/acceptance_tests.py
      - run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --stack-name ${{ env.PROD_STACK_NAME }} --image-repository 621544995223.dkr.ecr.us-west-2.amazonaws.com/budget-tracker-ecr-backend --capabilities CAPABILITY_IAM --region us-west-2